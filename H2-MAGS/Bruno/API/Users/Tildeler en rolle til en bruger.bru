meta {
  name: Tildeler en rolle til en bruger.
  type: http
  seq: 10
}

put {
  url: {{baseUrl}}/api/Users/:id/role
  body: json
  auth: bearer
}

params:path {
  id: {{user-id}}
}

headers {
  Authorization: {{apiKey}}
}

auth:bearer {
  token: {{JWT-Admin}}
}

body:json {
  {
    "roleId": "2"
  }
}

tests {
  // Debug test - log responset for at se strukturen
  test("Debug: Log response struktur", function() {
    console.log("Response status:", res.status);
    console.log("Response body:", JSON.stringify(res.body, null, 2));
    console.log("Response body type:", typeof res.body);
    console.log("Response body keys:", Object.keys(res.body || {}));
  });
  
  // Test status kode
  test("Status kode skal være 200 OK", function() {
    expect(res.status).to.equal(200);
  });
  
  // Test at responset har success message (mere fleksibel)
  test("Response skal have success message", function() {
    expect(res.body).to.have.property("message");
    // Test om beskeden indeholder enten 'rolle' eller 'tildelt'
    const message = res.body.message;
    expect(message.includes("rolle") || message.includes("tildelt") || message.includes("success")).to.be.true;
  });
  
  // Test at responset ikke er tomt
  test("Response skal ikke være tom", function() {
    expect(res.body).to.not.be.empty;
  });
  
  // Test at responset har en message egenskab
  test("Response skal have message egenskab", function() {
    expect(res.body).to.have.property("message");
    expect(res.body.message).to.be.a("string");
  });
}
