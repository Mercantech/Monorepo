@page "/"
@using System.Net.Http
@using Blazor.Services
@inject AuthenticationService AuthService

<PageTitle>VacationStay - Find din drømmeferie</PageTitle>

<div class="modern-home">
    <!-- Hero Section -->
    <section class="hero-section">
        <div class="hero-content">
            <div class="hero-text">
                <h1 class="hero-title">
                    Velkommen til 
                    <span class="brand-gradient">🏖️ VacationStay</span>
                </h1>
                <p class="hero-subtitle">
                    Find din drømmeferie med vores moderne booking platform - strande, bjerge og byer venter på dig!
                </p>
                <div class="hero-actions">
                    @if (isAuthenticated)
                    {
                        <a href="/rooms" class="btn btn-primary btn-lg">
                            <i class="bi bi-geo-alt-fill me-2"></i>
                            Find Feriested
                        </a>
                        <a href="/profile" class="btn btn-outline-light btn-lg">
                            <i class="bi bi-person-circle me-2"></i>
                            Min Profil
                        </a>
                    }
                    else
                    {
                        <a href="/login" class="btn btn-primary btn-lg">
                            <i class="bi bi-box-arrow-in-right me-2"></i>
                            Log Ind
                        </a>
                        <a href="/rooms" class="btn btn-outline-light btn-lg">
                            <i class="bi bi-geo-alt-fill me-2"></i>
                            Find Feriested
                        </a>
                    }
                </div>
            </div>
            <div class="hero-visual">
                <div class="floating-card">
                    <i class="bi bi-building"></i>
                </div>
            </div>
        </div>
    </section>

    <!-- Stats Section -->
    <section class="stats-section">
        <div class="container">
            <div class="row">
                <div class="col-md-6 mb-4">
                    <StatusCard 
                        Title="API Status"
                        IconClass="bi bi-heart-pulse text-success"
                        BorderClass="border-success"
                        HealthCheck="@healthCheck" />
                </div>
                <div class="col-md-6 mb-4">
                    <StatusCard 
                        Title="Database Status"
                        IconClass="bi bi-database text-warning"
                        BorderClass="border-warning"
                        HealthCheck="@dbHealthCheck" />
                </div>
            </div>
        </div>
    </section>

    <!-- Features Section -->
    <section class="features-section">
        <div class="container">
            <div class="section-header">
                <h2 class="section-title">System Features</h2>
                <p class="section-subtitle">Udforsk systemets muligheder og funktioner</p>
            </div>
            
            <div class="row">
                <div class="col-12 mb-4">
                    <div class="feature-card weather-card">
                        <div class="feature-header">
                            <i class="bi bi-cloud-sun-fill"></i>
                            <h3>Vejr Information</h3>
                        </div>
                        <WeatherTable WeatherForecasts="@weatherForecasts" />
                    </div>
                </div>
            </div>

            <div class="row">
                <div class="col-12 mb-4">
                    <div class="feature-card search-card">
                        <div class="feature-header">
                            <i class="bi bi-search"></i>
                            <h3>Søg Ledige Værelser</h3>
                        </div>
                        <RoomAvailabilitySearch />
                    </div>
                </div>
            </div>

            <div class="row">
                <div class="col-12 mb-4">
                    <div class="feature-card demo-card">
                        <div class="feature-header">
                            <i class="bi bi-calculator"></i>
                            <h3>Demo Counter</h3>
                        </div>
                        <Counter />
                    </div>
                </div>
            </div>
        </div>
    </section>
</div>

<style>
    .modern-home {
        min-height: 100vh;
        color: #e2e8f0;
    }

    /* Hero Section */
    .hero-section {
        padding: 4rem 2rem;
        min-height: 70vh;
        display: flex;
        align-items: center;
        position: relative;
        overflow: hidden;
    }

    .hero-section::before {
        content: '';
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background: radial-gradient(circle at 20% 50%, rgba(99, 102, 241, 0.1) 0%, transparent 50%),
                    radial-gradient(circle at 80% 20%, rgba(139, 92, 246, 0.1) 0%, transparent 50%);
        pointer-events: none;
    }

    .hero-content {
        max-width: 1200px;
        margin: 0 auto;
        display: grid;
        grid-template-columns: 1fr 1fr;
        gap: 4rem;
        align-items: center;
        position: relative;
        z-index: 1;
    }

    .hero-title {
        font-size: 3.5rem;
        font-weight: 800;
        line-height: 1.2;
        margin-bottom: 1.5rem;
        color: #1c1917;
    }

    .brand-gradient {
        background: linear-gradient(135deg, #3b82f6, #10b981, #f97316);
        -webkit-background-clip: text;
        -webkit-text-fill-color: transparent;
        background-clip: text;
    }

    .hero-subtitle {
        font-size: 1.25rem;
        color: #6b7280;
        margin-bottom: 2.5rem;
        line-height: 1.6;
    }

    .hero-actions {
        display: flex;
        gap: 1rem;
        flex-wrap: wrap;
    }

    .btn-lg {
        padding: 1rem 2rem;
        font-size: 1.1rem;
        font-weight: 600;
        border-radius: 16px;
        transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
        text-decoration: none;
        display: inline-flex;
        align-items: center;
        position: relative;
        overflow: hidden;
    }

    .btn-outline-light {
        background: transparent;
        border: 2px solid rgba(226, 232, 240, 0.3);
        color: #e2e8f0;
        backdrop-filter: blur(10px);
    }

    .btn-outline-light:hover {
        background: rgba(226, 232, 240, 0.1);
        border-color: rgba(226, 232, 240, 0.5);
        color: #ffffff;
        transform: translateY(-2px);
    }

    /* Hero Visual */
    .hero-visual {
        display: flex;
        justify-content: center;
        align-items: center;
        position: relative;
    }

    .floating-card {
        width: 200px;
        height: 200px;
        background: linear-gradient(135deg, rgba(99, 102, 241, 0.2), rgba(139, 92, 246, 0.2));
        border-radius: 32px;
        display: flex;
        align-items: center;
        justify-content: center;
        font-size: 4rem;
        color: #6366f1;
        animation: float 6s ease-in-out infinite;
        backdrop-filter: blur(20px);
        border: 1px solid rgba(99, 102, 241, 0.3);
        box-shadow: 0 20px 60px rgba(99, 102, 241, 0.2);
    }

    @@keyframes float {
        0%, 100% { transform: translateY(0px); }
        50% { transform: translateY(-20px); }
    }

    /* Stats Section */
    .stats-section {
        padding: 4rem 0;
        background: rgba(15, 15, 35, 0.5);
        backdrop-filter: blur(10px);
        border-top: 1px solid rgba(99, 102, 241, 0.1);
        border-bottom: 1px solid rgba(99, 102, 241, 0.1);
    }

    /* Features Section */
    .features-section {
        padding: 4rem 0;
    }

    .section-header {
        text-align: center;
        margin-bottom: 4rem;
    }

    .section-title {
        font-size: 2.5rem;
        font-weight: 700;
        color: #ffffff;
        margin-bottom: 1rem;
    }

    .section-subtitle {
        font-size: 1.1rem;
        color: #94a3b8;
        max-width: 600px;
        margin: 0 auto;
    }

    .feature-card {
        background: rgba(30, 30, 60, 0.8);
        border: 1px solid rgba(99, 102, 241, 0.2);
        border-radius: 24px;
        padding: 2rem;
        backdrop-filter: blur(20px);
        transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
        height: 100%;
    }

    .feature-card:hover {
        transform: translateY(-4px);
        box-shadow: 0 20px 60px rgba(99, 102, 241, 0.2);
        border-color: rgba(99, 102, 241, 0.4);
    }

    .feature-header {
        display: flex;
        align-items: center;
        gap: 1rem;
        margin-bottom: 2rem;
        padding-bottom: 1rem;
        border-bottom: 1px solid rgba(99, 102, 241, 0.2);
    }

    .feature-header i {
        font-size: 2rem;
        color: #6366f1;
    }

    .feature-header h3 {
        font-size: 1.5rem;
        font-weight: 600;
        color: #ffffff;
        margin: 0;
    }

    /* Mobile Responsive */
    @@media (max-width: 768px) {
        .hero-content {
            grid-template-columns: 1fr;
            gap: 2rem;
            text-align: center;
        }
        
        .hero-title {
            font-size: 2.5rem;
        }
        
        .hero-actions {
            justify-content: center;
        }
        
        .floating-card {
            width: 150px;
            height: 150px;
            font-size: 3rem;
        }
        
        .hero-section {
            padding: 2rem 1rem;
        }
        
        .btn-lg {
            padding: 0.875rem 1.5rem;
            font-size: 1rem;
        }
    }
</style>

@code {
    HealthCheckResponse? healthCheck;
    HealthCheckResponse? dbHealthCheck;
    WeatherForecast[]? weatherForecasts;
    private bool isAuthenticated = false;

    protected override async Task OnInitializedAsync()
    {
        // Check authentication status
        isAuthenticated = await AuthService.IsAuthenticatedAsync();
        
        // Load data
        healthCheck = await ApiService.GetHealthCheckAsync();
        dbHealthCheck = await ApiService.GetDBHealthCheckAsync();
        weatherForecasts = await ApiService.GetWeatherAsync(5);
        
        // Subscribe to authentication changes
        AuthService.AuthenticationStateChanged += OnAuthenticationStateChanged;
    }

    private async void OnAuthenticationStateChanged(object? sender, bool authenticated)
    {
        isAuthenticated = authenticated;
        await InvokeAsync(StateHasChanged);
    }

    public void Dispose()
    {
        AuthService.AuthenticationStateChanged -= OnAuthenticationStateChanged;
    }
}
