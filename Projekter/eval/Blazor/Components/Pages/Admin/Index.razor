@page "/admin"
@using Blazor.Data.Models
@using Blazor.Services
@inject SurveyService SurveyService
@inject NavigationManager Navigation
@inject IJSRuntime JS
@implements IAsyncDisposable

<PageTitle>Admin Dashboard</PageTitle>

<!-- Hero Section -->
<div class="hero-section">
    <div class="container">
        <div class="row justify-content-center">
            <div class="col-lg-8 text-center">
                <h1 class="hero-title">Admin Dashboard</h1>
                <p class="hero-subtitle">Administrer dine evalueringsundersøgelser og få indsigt i feedback</p>
            </div>
        </div>
    </div>
</div>

<!-- Main Content -->
<div class="container py-5">
    <div class="row">
        <div class="col-12">
            <div class="d-flex justify-content-between align-items-center mb-4">
                <div>
                    <h2 class="fw-bold mb-2">Mine Undersøgelser</h2>
                    <p class="text-muted mb-0">Opret og administrer evalueringsundersøgelser</p>
                </div>
                <button class="btn btn-primary" @onclick="CreateNewSurvey">
                    <i class="fas fa-plus me-2"></i> Ny Undersøgelse
                </button>
            </div>
        </div>
    </div>

    @if (surveys == null)
    {
        <div class="text-center py-8">
            <div class="spinner-border mb-4" role="status">
                <span class="visually-hidden">Indlæser...</span>
            </div>
            <p class="text-muted">Indlæser undersøgelser...</p>
        </div>
    }
    else if (!surveys.Any())
    {
        <div class="text-center py-8">
            <div class="gradient-bg rounded-3 p-8 mb-6">
                <i class="fas fa-clipboard-list fa-4x text-primary mb-4"></i>
                <h3 class="fw-bold mb-3">Ingen undersøgelser endnu</h3>
                <p class="text-muted mb-4">Opret din første undersøgelse for at komme i gang med at evaluere</p>
                <button class="btn btn-primary btn-lg hover-lift" @onclick="CreateNewSurvey">
                    <i class="fas fa-plus me-2"></i> Opret Undersøgelse
                </button>
            </div>
        </div>
    }
    else
    {
    <div class="row">
        @foreach (var survey in surveys)
        {
            <div class="col-md-6 col-lg-4 mb-4">
                <div class="quiz-card h-100 fade-in">
                    <div class="card-header d-flex justify-content-between align-items-center">
                        <div class="d-flex align-items-center gap-3">
                            <div class="bg-primary rounded-circle p-2" style="width: 40px; height: 40px;">
                                <i class="fas fa-clipboard-list text-white"></i>
                            </div>
                            <div>
                                <h5 class="card-title mb-0 fw-bold">@survey.Title</h5>
                                <small class="text-muted">@survey.CreatedAt.ToString("dd/MM/yyyy")</small>
                            </div>
                        </div>
                        <div class="d-flex gap-2">
                            <a href="/admin/survey/@survey.Id" class="btn btn-sm btn-primary">
                                <i class="fas fa-edit me-1"></i> Rediger
                            </a>
                            <div class="dropdown">
                                <button class="btn btn-sm btn-outline-secondary dropdown-toggle" type="button" data-bs-toggle="dropdown">
                                    <i class="fas fa-ellipsis-v"></i>
                                </button>
                                <ul class="dropdown-menu">
                                    <li><a class="dropdown-item" href="/admin/survey/@survey.Id/responses"><i class="fas fa-chart-bar me-2"></i> Svar</a></li>
                                    <li><a class="dropdown-item" href="/survey/@survey.AccessCode" target="_blank"><i class="fas fa-external-link-alt me-2"></i> Forhåndsvis</a></li>
                                    <li><a class="dropdown-item" @onclick="() => DuplicateSurvey(survey.Id)"><i class="fas fa-copy me-2"></i> Dupliker</a></li>
                                    <li><hr class="dropdown-divider"></li>
                                    <li><a class="dropdown-item text-danger" @onclick="() => DeleteSurvey(survey.Id)"><i class="fas fa-trash me-2"></i> Slet</a></li>
                                </ul>
                            </div>
                        </div>
                    </div>
                    <div class="card-body">
                        <p class="card-text text-muted mb-4">@(survey.Description ?? "Ingen beskrivelse")</p>
                        <div class="row text-center mb-4">
                            <div class="col-4">
                                <div class="bg-primary rounded p-3 mb-2">
                                    <div class="fw-bold text-white fs-4">@survey.Questions.Count</div>
                                </div>
                                <small class="text-muted">Spørgsmål</small>
                            </div>
                            <div class="col-4">
                                <div class="bg-success rounded p-3 mb-2">
                                    <div class="fw-bold text-white fs-4">@survey.Responses.Count</div>
                                </div>
                                <small class="text-muted">Svar</small>
                            </div>
                            <div class="col-4">
                                <div class="bg-info rounded p-3 mb-2">
                                    <div class="fw-bold text-white fs-4">@survey.AccessCode</div>
                                </div>
                                <small class="text-muted">Kode</small>
                            </div>
                        </div>
                    </div>
                    <div class="card-footer">
                        <div class="d-flex justify-content-between align-items-center">
                            <div class="d-flex align-items-center gap-2">
                                <button class="btn btn-sm @(survey.IsActive ? "btn-outline-warning" : "btn-outline-success")" 
                                        @onclick="() => ToggleSurveyStatus(survey.Id, !survey.IsActive)"
                                        title="@(survey.IsActive ? "Deaktivér" : "Aktivér")">
                                    <i class="fas @(survey.IsActive ? "fa-pause" : "fa-play") me-1"></i>
                                    @(survey.IsActive ? "Deaktivér" : "Aktivér")
                                </button>
                                <span class="badge @(survey.IsActive ? "bg-success" : "bg-secondary")">
                                    <i class="fas @(survey.IsActive ? "fa-check-circle" : "fa-pause-circle") me-1"></i>
                                    @(survey.IsActive ? "Aktiv" : "Inaktiv")
                                </span>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>
    }
</div>

@code {
    private List<Survey>? surveys;

    protected override async Task OnInitializedAsync()
    {
        await LoadSurveys();
    }

    private async Task LoadSurveys()
    {
        surveys = await SurveyService.GetAllSurveysAsync();
    }

    private void CreateNewSurvey()
    {
        Navigation.NavigateTo("/admin/survey/new");
    }

    private async Task DeleteSurvey(int surveyId)
    {
        if (await JS.InvokeAsync<bool>("confirm", "Er du sikker på, at du vil slette denne undersøgelse?"))
        {
            try
            {
                await SurveyService.DeleteSurveyAsync(surveyId);
                await LoadSurveys();
                await JS.InvokeVoidAsync("alert", "Undersøgelse slettet!");
            }
            catch (Exception ex)
            {
                await JS.InvokeVoidAsync("alert", $"Fejl ved sletning: {ex.Message}");
            }
        }
    }

    private async Task DuplicateSurvey(int surveyId)
    {
        try
        {
            var duplicatedSurvey = await SurveyService.DuplicateSurveyAsync(surveyId);
            await LoadSurveys();
            await JS.InvokeVoidAsync("alert", $"Undersøgelse duplikeret! Ny adgangskode: {duplicatedSurvey.AccessCode}");
        }
        catch (Exception ex)
        {
            await JS.InvokeVoidAsync("alert", $"Fejl ved duplikering: {ex.Message}");
        }
    }

    private async Task ToggleSurveyStatus(int surveyId, bool isActive)
    {
        try
        {
            var survey = surveys?.FirstOrDefault(s => s.Id == surveyId);
            if (survey != null)
            {
                survey.IsActive = isActive;
                await SurveyService.UpdateSurveyAsync(survey);
                await LoadSurveys();
                await JS.InvokeVoidAsync("alert", $"Undersøgelse {(isActive ? "aktiveret" : "deaktiveret")}!");
            }
        }
        catch (Exception ex)
        {
            await JS.InvokeVoidAsync("alert", $"Fejl ved ændring af status: {ex.Message}");
        }
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            // Restore scroll position on first render
            await JS.InvokeVoidAsync("restoreScrollPosition");
        }
    }

    private async Task SaveScrollPosition()
    {
        await JS.InvokeVoidAsync("saveScrollPosition");
    }

    public async ValueTask DisposeAsync()
    {
        try
        {
            // Save scroll position when component is disposed
            await SaveScrollPosition();
        }
        catch (JSDisconnectedException)
        {
            // Ignore JS disconnect errors during disposal
        }
        catch (InvalidOperationException)
        {
            // Ignore JS interop errors during disposal
        }
    }
}
